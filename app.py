# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yyw1BvwimsaMBvTsLOD0iH59VY9iUKrw
"""

import streamlit as st
import tensorflow as tf
from tensorflow.keras.preprocessing import image
import numpy as np
import pandas as pd
import os
from PIL import Image

# Load model CNN
model = tf.keras.models.load_model("skin_type_model.h5")
class_names = ['acne', 'dry skin', 'dull skin', 'large pores', 'oily skin', 'sensitive or irritated skin', 'signs of aging']

# Load CSV rekomendasi
df = pd.read_csv("MP-Skin Care Product Recommendation System3.csv")

# Preprocessing image
def preprocess_image(img):
    img = img.resize((224, 224))
    img_array = image.img_to_array(img)
    img_array = img_array / 255.0
    return np.expand_dims(img_array, axis=0)

# App
st.title("üíÜ‚Äç‚ôÄÔ∏è Skin Type Detector & Skincare Recommender")

uploaded_file = st.file_uploader("Upload Foto Wajah Anda", type=["jpg", "jpeg", "png"])

if uploaded_file:
    img = Image.open(uploaded_file)
    st.image(img, caption="Foto yang Diupload", use_column_width=True)

    # Prediksi
    img_array = preprocess_image(img)
    prediction = model.predict(img_array)
    predicted_class = class_names[np.argmax(prediction)]

    st.success(f"Jenis kulit terdeteksi: **{predicted_class.upper()}**")

    # Rekomendasi produk
    st.subheader("üß¥ Rekomendasi Produk Skincare:")
    recommended = df[df['skintype'].str.lower().str.contains(predicted_class.lower())].head(5)

    for _, row in recommended.iterrows():
        st.markdown(f"### [{row['product_name']}]({row['product_href']})")
        st.image(row['picture_src'], width=150)
        st.markdown(f"**Brand**: {row['brand']}")
        st.markdown(f"**Tipe**: {row['product_type']}")
        st.markdown(f"**Efek**: {row['notable_effects']}")
        st.markdown(f"**Harga**: {row['price']}")
        st.markdown(f"**Deskripsi**: {row['description']}")
        st.markdown("---")